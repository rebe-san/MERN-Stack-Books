{"version":3,"sources":["components/CreateBook.js","components/BookCard.js","components/BooksList.js","components/BookDetails.js","components/UpdateBook.js","App.js","serviceWorker.js","index.js"],"names":["CreateBook","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","book","title","state","isbn","author","description","published_date","publisher","axios","post","then","res","props","history","push","catch","err","console","log","bind","className","to","noValidate","onSubmit","this","type","placeholder","onChange","Component","BookCard","_id","id","BookList","books","get","data","map","key","ShowBookDetails","match","params","delete","BookItem","scope","onClick","onDeleteClick","UpdateBookInfo","put","htmlFor","App","exact","path","component","BooksList","UpdateBook","BookDetails","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uZAkKeA,G,kBAzJb,aAAe,IAAD,8BACZ,+CAeFC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAjB9B,EAmBdC,aAAe,SAAAL,GACbA,EAAEM,iBACF,IAAMC,EAAO,CACXC,MAAO,EAAKC,MAAMD,MAClBE,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,OACnBC,YAAa,EAAKH,MAAMG,YACxBC,eAAgB,EAAKJ,MAAMI,eAC3BC,UAAW,EAAKL,MAAMK,WAKxBC,IACGC,KAAK,kCAAmCT,GACxCU,MAAK,SAAAC,GACJ,EAAKjB,SAAS,CACZO,MAAO,GACPE,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,eAAgB,GAChBC,UAAW,KAEb,EAAKK,MAAMC,QAAQC,KAAK,QAEzBC,OAAM,SAAAC,GACLC,QAAQC,IAAI,2BAEhBD,QAAQC,IAAR,mBAEAD,QAAQC,IAAR,iBAAsBlB,EAAKC,QAC3BgB,QAAQC,IAAR,iBAAsBlB,EAAKG,OAC3Bc,QAAQC,IAAR,iBAAsBlB,EAAKI,SAC3Ba,QAAQC,IAAR,iBAAsBlB,EAAKK,cAC3BY,QAAQC,IAAR,iBAAsBlB,EAAKM,iBAC3BW,QAAQC,IAAR,iBAAsBlB,EAAKO,aApD3B,EAAKL,MAAQ,CACXD,MAAO,GACPE,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,eAAgB,GAChBC,UAAW,IAGb,EAAKf,aAAe,EAAKA,aAAa2B,KAAlB,gBACpB,EAAKrB,aAAe,EAAKA,aAAaqB,KAAlB,gBAbR,E,sEA2DZ,OACE,6BAASC,UAAU,cACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qCAAvB,+BAKF,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,6BAAd,sBAEA,0BAAME,YAAU,EAACC,SAAUC,KAAK1B,aAAcsB,UAAU,OAEtD,yBAAKA,UAAU,cACb,2BACEK,KAAK,OACLC,YAAY,mBACZ9B,KAAK,QACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMD,MAClB0B,SAAUH,KAAKhC,gBAInB,yBAAK4B,UAAU,cACb,2BACEK,KAAK,OACLC,YAAY,OACZ9B,KAAK,OACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMC,KAClBwB,SAAUH,KAAKhC,gBAInB,yBAAK4B,UAAU,cACb,2BACEK,KAAK,OACLC,YAAY,QACZ9B,KAAK,SACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAME,OAClBuB,SAAUH,KAAKhC,gBAInB,yBAAK4B,UAAU,cACb,2BACEK,KAAK,OACLC,YAAY,iBACZ9B,KAAK,cACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMG,YAClBsB,SAAUH,KAAKhC,gBAInB,yBAAK4B,UAAU,cACb,2BACEK,KAAK,OACLC,YAAY,0BACZ9B,KAAK,iBACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMI,eAClBqB,SAAUH,KAAKhC,gBAInB,yBAAK4B,UAAU,cACb,2BACEK,KAAK,OACLC,YAAY,YACZ9B,KAAK,YACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMK,UAClBoB,SAAUH,KAAKhC,gBAInB,2BACEiC,KAAK,SACLL,UAAU,2C,GAjJHQ,cCgBVC,G,MAlBE,SAAAjB,GAEf,IAAMZ,EAAOY,EAAMZ,KACnB,OAEE,yBAAKoB,UAAU,aACb,4BACE,kBAAC,IAAD,CAAMC,GAAE,qBAAgBrB,EAAK8B,KAAOC,GAAI/B,EAAK8B,KAC1C9B,EAAKC,QAGV,4BAAKD,EAAKI,QACV,2BAAIJ,EAAKK,gBCqDA2B,G,kBA5Db,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KAGDV,MAAQ,CACX+B,MAAO,IALQ,E,iFAUE,IAAD,OAClBzB,IAGG0B,IAAI,mCACJxB,MAAK,SAAAC,GACJ,EAAKjB,SAAS,CAEZuC,MAAOtB,EAAIwB,UAGdpB,OAAM,SAAAC,GACLC,QAAQC,IAAI,gC,+BAOhB,IAAMe,EAAQT,KAAKtB,MAAM+B,MAEzB,OADAhB,QAAQC,IAAIe,GAEV,6BAASb,UAAU,gBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAQA,UAAU,aAChB,wBAAIA,UAAU,6BAAd,oBAEF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEC,GAAG,eACHD,UAAU,uCAFZ,6BAQJ,0BAAMA,UAAU,QACd,6BAASA,UAAU,iBAChBa,EAAMG,KAAI,SAAApC,GAAI,OACb,kBAAC,EAAD,CAAUqC,IAAKrC,EAAK8B,IAAK9B,KAAMA,e,GApDxB4B,cCuHRU,G,kBAxHb,WAAY1B,GAAQ,IAAD,8BACjB,4CAAMA,KACDV,MAAQ,CACXF,KAAM,IAHS,E,iFAOE,IAAD,OAClBiB,QAAQC,IAAIM,KAAKZ,MAAM2B,MAAMC,OAAOT,IACpCvB,IACG0B,IAAI,mCAAqCV,KAAKZ,MAAM2B,MAAMC,OAAOT,IACjErB,MAAK,SAAAC,GACJ,EAAKjB,SAAS,CACZM,KAAMW,EAAIwB,UAGbpB,OAAM,SAAAC,GACLC,QAAQC,IAAI,mC,oCAKJa,GAAK,IAAD,OAChBvB,IAGGiC,OAAO,mCAAqCV,GAC5CrB,MAAK,SAAAC,GACJ,EAAKC,MAAMC,QAAQC,KAAK,QAEzBC,OAAM,SAAAC,GACLC,QAAQC,IAAI,+C,+BAMhB,IAAMlB,EAAOwB,KAAKtB,MAAMF,KACxBiB,QAAQC,IAAIlB,GACZ,IAAI0C,EACF,iCACE,2BAAOtB,UAAU,gCACf,+BACE,4BACE,wBAAIuB,MAAM,OAAV,KACA,sCACA,4BAAK3C,EAAKC,QAEZ,4BACE,wBAAI0C,MAAM,OAAV,KACA,qCACA,4BAAK3C,EAAKI,SAEZ,4BACE,wBAAIuC,MAAM,OAAV,KACA,oCACA,4BAAK3C,EAAKG,OAEZ,4BACE,wBAAIwC,MAAM,OAAV,KACA,yCACA,4BAAK3C,EAAKO,YAEZ,4BACE,wBAAIoC,MAAM,OAAV,KACA,uDACA,4BAAK3C,EAAKM,iBAEZ,4BACE,wBAAIqC,MAAM,OAAV,KACA,8CACA,4BAAK3C,EAAKK,iBAOpB,OACE,6BAASe,UAAU,mBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qCAAvB,gCAIF,4BAAQA,UAAU,mBAChB,wBAAIA,UAAU,yBAAd,wBAGJ,6BAAMsB,GACN,yBAAKtB,UAAU,OACb,yBAAKA,UAAU,YACb,4BACEK,KAAK,SACLL,UAAU,uCACVwB,QAASpB,KAAKqB,cAAc1B,KAAKK,KAAMxB,EAAK8B,MAH9C,gBAOA,8BAEF,yBAAKV,UAAU,YACb,kBAAC,IAAD,CACEC,GAAE,qBAAgBrB,EAAK8B,KACvBC,GAAI/B,EAAK8B,IACTV,UAAU,sCAHZ,gBAOA,qC,GAhHgBQ,cC0JfkB,E,YA1Jb,WAAYlC,GAAQ,IAAD,8BACjB,4CAAMA,KAyBRe,SAAW,SAAAlC,GACT,EAAKC,SAAS,CAAEM,KAAK,eAAIP,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,UA3BjC,EA8BnB0B,SAAW,SAAA9B,GACTA,EAAEM,iBAEFS,IACGuC,IACC,mCAAqC,EAAKnC,MAAM2B,MAAMC,OAAOT,GAC7D,EAAK7B,MAAMF,MAEZU,MAAK,SAAAC,GACJ,EAAKC,MAAMC,QAAQC,KAAK,cAAgB,EAAKF,MAAM2B,MAAMC,OAAOT,OAEjEhB,OAAM,SAAAC,GACLC,QAAQC,IAAI,gCAxChB,EAAKhB,MAAQ,CACXF,KAAM,CACJC,MAAO,GACPE,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,eAAgB,GAChBC,UAAW,KATE,E,iFAcE,IAAD,OAElBC,IACG0B,IAAI,mCAAqCV,KAAKZ,MAAM2B,MAAMC,OAAOT,IACjErB,MAAK,YAAe,IAAZyB,EAAW,EAAXA,KACP,EAAKzC,SAAS,CAAEM,KAAMmC,OAEvBpB,OAAM,SAAAC,GACLC,QAAQC,IAAI,kC,+BAyBhB,OACE,yBAAKE,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,6BAEA,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,sCAAvB,4BAIF,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,gBACA,uBAAGA,UAAU,oBAAb,yCAMJ,yBAAKA,UAAU,mBACb,0BAAME,YAAU,EAACC,SAAUC,KAAKD,UAC9B,yBAAKH,UAAU,cACb,2BAAO4B,QAAQ,SAAf,UACA,2BACEvB,KAAK,OACLC,YAAY,oBACZ9B,KAAK,QACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMF,KAAKC,MACvB0B,SAAUH,KAAKG,YAGnB,6BAEA,yBAAKP,UAAU,cACb,2BAAO4B,QAAQ,QAAf,QACA,2BACEvB,KAAK,OACLC,YAAY,OACZ9B,KAAK,OACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMF,KAAKG,KACvBwB,SAAUH,KAAKG,YAInB,yBAAKP,UAAU,cACb,2BAAO4B,QAAQ,UAAf,SACA,2BACEvB,KAAK,OACLC,YAAY,SACZ9B,KAAK,SACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMF,KAAKI,OACvBuB,SAAUH,KAAKG,YAInB,yBAAKP,UAAU,cACb,2BAAO4B,QAAQ,eAAf,kBACA,2BACEvB,KAAK,OACLC,YAAY,qBACZ9B,KAAK,cACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMF,KAAKK,YACvBsB,SAAUH,KAAKG,YAInB,yBAAKP,UAAU,cACb,2BAAO4B,QAAQ,kBAAf,2BACA,2BACEvB,KAAK,OACLC,YAAY,iBACZ9B,KAAK,iBACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMF,KAAKM,eACvBqB,SAAUH,KAAKG,YAGnB,yBAAKP,UAAU,cACb,2BAAO4B,QAAQ,aAAf,aACA,2BACEvB,KAAK,OACLC,YAAY,yBACZ9B,KAAK,YACLwB,UAAU,eACVvB,MAAO2B,KAAKtB,MAAMF,KAAKO,UACvBoB,SAAUH,KAAKG,YAInB,4BACEF,KAAK,SACLL,UAAU,yCAFZ,4B,GA7IeQ,aCmBdqB,E,iLAXX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW7D,IACtC,kBAAC,IAAD,CAAO4D,KAAK,iBAAiBC,UAAWE,IACxC,kBAAC,IAAD,CAAOH,KAAK,iBAAiBC,UAAWG,S,GAP9B3B,aCCE4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2DCZNqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,MAAK,SAAAyD,GACjCA,EAAaC,kB","file":"static/js/main.e5e0f084.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport \"./CreateBook.css\";\n// CREATE-enviar-POST\n//Create Book Component-class component\nclass CreateBook extends Component {\n  //constructor\n  constructor() {\n    super();\n    //state\n    this.state = {\n      title: \"\",\n      isbn: \"\",\n      author: \"\",\n      description: \"\",\n      published_date: \"\",\n      publisher: \"\"\n    };\n    //  This is necessary to make 'this' work in the callback\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  //Events Handlers - Class Methods\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const book = {\n      title: this.state.title,\n      isbn: this.state.isbn,\n      author: this.state.author,\n      description: this.state.description,\n      published_date: this.state.published_date,\n      publisher: this.state.publisher\n    };\n    // axios.post method to send an HTTP POST request to the back-end endpoint http://localhost:4000/api/books.\n    //  This endpoint is expecting to get the new book object in JSON format in the request body.\n    // Therefore we need to pass in the book object as a second argument.\n    axios\n      .post(\"http://localhost:4000/api/books\", book)\n      .then(res => {\n        this.setState({\n          title: \"\",\n          isbn: \"\",\n          author: \"\",\n          description: \"\",\n          published_date: \"\",\n          publisher: \"\"\n        });\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(\"Error in CreateBook!\");\n      });\n    console.log(`Form submitted:`);\n    // console.log(`${book}`)\n    console.log(`title: ${book.title}`);\n    console.log(`title: ${book.isbn}`);\n    console.log(`title: ${book.author}`);\n    console.log(`title: ${book.description}`);\n    console.log(`title: ${book.published_date}`);\n    console.log(`title: ${book.publisher}`);\n  };\n  //render method\n  render() {\n    return (\n      <section className=\"CreateBook\">\n        <div className=\"container\">\n          <div className=\"row\">\n            {/* Link to Books List */}\n            <div className=\"col-md-8 m-auto\">\n              <Link to=\"/\" className=\"btn btn-show-books float-left m-3\">\n                Mostrar la lista de libros\n              </Link>\n            </div>\n            {/* Form Container */}\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center m-2\">AÃ‘ADIR UN LIBRO</h1>\n              {/* Form */}\n              <form noValidate onSubmit={this.handleSubmit} className=\"m-3\">\n                {/* title field */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Titulo del libro\"\n                    name=\"title\"\n                    className=\"form-control\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* isbn field */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"ISBN\"\n                    name=\"isbn\"\n                    className=\"form-control\"\n                    value={this.state.isbn}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* author field */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Autor\"\n                    name=\"author\"\n                    className=\"form-control\"\n                    value={this.state.author}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* description field */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"DescripciÃ³n\"\n                    name=\"description\"\n                    className=\"form-control\"\n                    value={this.state.description}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* published_date field */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    placeholder=\"Fecha de publicaciÃ³n\"\n                    name=\"published_date\"\n                    className=\"form-control\"\n                    value={this.state.published_date}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* publisher field */}\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Editorial\"\n                    name=\"publisher\"\n                    className=\"form-control\"\n                    value={this.state.publisher}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* button submit */}\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-submit btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nexport default CreateBook;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./BookCard.css\";\n\n// Funtional component with props\nconst BookCard = props => {\n  // Receiving prop book wich is a object\n  const book = props.book;\n  return (\n    // retriving data from one book\n    <div className=\"card-book\">\n      <h2>\n        <Link to={`/show-book/${book._id}`} id={book._id}>\n          {book.title}\n        </Link>\n      </h2>\n      <h3>{book.author}</h3>\n      <p>{book.description}</p>\n    </div>\n\n  );\n};\n\nexport default BookCard;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport BookCard from \"./BookCard\";\nimport \"./BookList.css\";\n\n// READ-obtener-GET\nclass BookList extends Component {\n  // constructor\n  constructor(props) {\n    super(props);\n\n    // initial state\n    this.state = {\n      books: []\n    };\n  }\n\n  // Once component has been mount\n  componentDidMount() {\n    axios\n\n      // GET is used to request data from a specified resource.\n      .get(\"http://localhost:4000/api/books\")\n      .then(res => {\n        this.setState({\n          // reciving books from DB - updating state\n          books: res.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Error from ShowBookList\");\n      });\n  }\n\n  // render method\n  render() {\n    // actual state\n    const books = this.state.books;\n    console.log(books);\n    return (\n      <section className=\"ShowBookList\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <header className=\"col-md-12\">\n              <h2 className=\"display-4 text-center p-3\">Lista de libros</h2>\n            </header>\n            <div className=\"col-md-11\">\n              <Link\n                to=\"/create-book\"\n                className=\"btn btn-add-book btn-lg float-right\"\n              >\n                + AÃ±adir nuevo libro\n              </Link>\n            </div>\n          </div>\n          <main className=\"list\">\n            <section className=\"card-list m-3\">\n              {books.map(book => (\n                <BookCard key={book._id} book={book} />\n              ))}\n            </section>\n          </main>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default BookList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./BookDetails.css\";\nimport axios from \"axios\";\n\n// READ-obtener-GET\nclass ShowBookDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {}\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    axios\n      .get(\"http://localhost:4000/api/books/\" + this.props.match.params.id)\n      .then(res => {\n        this.setState({\n          book: res.data\n        });\n      })\n      .catch(err => {\n        console.log(\"Error from ShowBookDetails\");\n      });\n  }\n\n  // DELETE-borrar-delete\n  onDeleteClick(id) {\n    axios\n\n      // The DELETE method deletes the specified resource.\n      .delete(\"http://localhost:4000/api/books/\" + id)\n      .then(res => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(\"Error form ShowBookDetails_deleteClick\");\n      });\n  }\n\n  // render method\n  render() {\n    const book = this.state.book;\n    console.log(book);\n    let BookItem = (\n      <section>\n        <table className=\"table table-hover table-dark\">\n          <tbody>\n            <tr>\n              <th scope=\"row\">1</th>\n              <td>Titulo</td>\n              <td>{book.title}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">2</th>\n              <td>Autor</td>\n              <td>{book.author}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">3</th>\n              <td>ISBN</td>\n              <td>{book.isbn}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">4</th>\n              <td>Editorial</td>\n              <td>{book.publisher}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">5</th>\n              <td>Fecha de PublicaciÃ³n</td>\n              <td>{book.published_date}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">6</th>\n              <td>DescripciÃ³n</td>\n              <td>{book.description}</td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n    );\n\n    return (\n      <section className=\"ShowBookDetails\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <nav className=\"col-md-10 m-auto\">\n              <Link to=\"/\" className=\"btn btn-show-all-books float-left\">\n                Muestra la lista de libros.\n              </Link>\n            </nav>\n            <header className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Registro del libro</h1>\n            </header>\n          </div>\n          <div>{BookItem}</div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <button\n                type=\"button\"\n                className=\"btn btn-delete-book btn-lg btn-block\"\n                onClick={this.onDeleteClick.bind(this, book._id)}\n              >\n                Borrar libro\n              </button>\n              <br />\n            </div>\n            <div className=\"col-md-6\">\n              <Link\n                to={`/edit-book/${book._id}`}\n                id={book._id}\n                className=\"btn btn-edit-book btn-lg btn-block\"\n              >\n                Editar libro\n              </Link>\n              <br />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ShowBookDetails;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nclass UpdateBookInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {\n        title: \"\",\n        isbn: \"\",\n        author: \"\",\n        description: \"\",\n        published_date: \"\",\n        publisher: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"Print id: \" + this.props.match.params.id);\n    axios\n      .get(\"http://localhost:4000/api/books/\" + this.props.match.params.id)\n      .then(({ data }) => {\n        this.setState({ book: data });\n      })\n      .catch(err => {\n        console.log(\"Error from UpdateBookInfo\");\n      });\n  }\n\n  onChange = e => {\n    this.setState({ book: { [e.target.name]: e.target.value } });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    axios\n      .put(\n        \"http://localhost:4000/api/books/\" + this.props.match.params.id,\n        this.state.book\n      )\n      .then(res => {\n        this.props.history.push(\"/show-book/\" + this.props.match.params.id);\n      })\n      .catch(err => {\n        console.log(\"Error in UpdateBookInfo!\");\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"UpdateBookInfo\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <br />\n              {/* Link to Books List */}\n              <Link to=\"/\" className=\"btn btn-outline-warning float-left\">\n                Mostrar lista de libros\n              </Link>\n            </div>\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Editar Libro</h1>\n              <p className=\"lead text-center\">\n                Actualizar la informacion del libro\n              </p>\n            </div>\n          </div>\n\n          <div className=\"col-md-8 m-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Titulo</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title of the Book\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  value={this.state.book.title}\n                  onChange={this.onChange}\n                />\n              </div>\n              <br />\n\n              <div className=\"form-group\">\n                <label htmlFor=\"isbn\">ISBN</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"ISBN\"\n                  name=\"isbn\"\n                  className=\"form-control\"\n                  value={this.state.book.isbn}\n                  onChange={this.onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"author\">Autor</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Author\"\n                  name=\"author\"\n                  className=\"form-control\"\n                  value={this.state.book.author}\n                  onChange={this.onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">DescripciÃ³n</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Describe this book\"\n                  name=\"description\"\n                  className=\"form-control\"\n                  value={this.state.book.description}\n                  onChange={this.onChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"published_date\">Fecha de PublicaciÃ³n</label>\n                <input\n                  type=\"date\"\n                  placeholder=\"published_date\"\n                  name=\"published_date\"\n                  className=\"form-control\"\n                  value={this.state.book.published_date}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"publisher\">Editorial</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Publisher of this Book\"\n                  name=\"publisher\"\n                  className=\"form-control\"\n                  value={this.state.book.publisher}\n                  onChange={this.onChange}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-info btn-lg btn-block\"\n              >\n                Actualizar libro\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UpdateBookInfo;\n","import React, { Component } from \"react\";\n// React Router\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\n// Components\nimport CreateBook from \"./components/CreateBook\";\nimport BooksList from \"./components/BooksList\";\nimport BookDetails from \"./components/BookDetails\";\nimport UpdateBook from \"./components/UpdateBook\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={BooksList} />\n        <Route path=\"/create-book\" component={CreateBook} />\n        <Route path=\"/edit-book/:id\" component={UpdateBook} />\n        <Route path=\"/show-book/:id\" component={BookDetails} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}